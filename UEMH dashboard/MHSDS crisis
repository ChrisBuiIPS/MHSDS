/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
UECMH DASHBOARD 

COMMUNITY CRISIS, 24/7 TELEPHONE LINES, PSYCH LIAISON REFERRALS

CREATED BY TOM BARDSLEY 10 NOVEMBER 2020
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

-- SET REPORTING PERIOD VARIABLES 

DECLARE @RP_START INT
DECLARE @RP_END INT
DECLARE @RP_STARTDATE DATE
DECLARE @RP_ENDDATE DATE
DECLARE @RP_ENDDATE_START DATE

SET @RP_START = 1405 
SET @RP_END = (SELECT MAX(UniqMonthID) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header) 

SET @RP_STARTDATE = (SELECT MIN(ReportingPeriodStartDate) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header WHERE UniqMonthID = @RP_START)
SET @RP_ENDDATE = (SELECT MAX(ReportingPeriodEndDate) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header WHERE UniqMonthID = @RP_END)
SET @RP_ENDDATE_START = (SELECT MIN(ReportingPeriodStartDate) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header WHERE UniqMonthID = @RP_END)



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET ALL REFERRALS TO CRISIS AND LIAISON SERVICES
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Refs') IS NOT NULL
DROP TABLE #Refs

SELECT 
	r.UniqServReqID 
	,r.UniqCareProfTeamID
	,r.Person_ID 
	,r.Der_Pseudo_NHS_Number
	,r.UniqMonthID
	,CASE WHEN r.ReferralRequestReceivedDate >= @RP_ENDDATE_START THEN 'Primary' ELSE NULL END as PrimaryFlag
	,h.ReportingPeriodStartDate
	,h.ReportingPeriodEndDate
	,r.ReferralRequestReceivedDate 
	,r.ReferralRequestReceivedTime 
	,CAST(ISNULL(r.ReferralRequestReceivedTime,'00:00:00') AS datetime) + CAST(r.ReferralRequestReceivedDate AS datetime) AS ReferralRequestReceivedDateTime 
	,CASE WHEN r.ReferralRequestReceivedDate >= @RP_STARTDATE THEN 1 ELSE 0 END as NewRef
	,DATEADD(MONTH, DATEDIFF(MONTH, 0, r.ReferralRequestReceivedDate), 0) AS Ref_MonthYear
	,r.ServDischDate
	,r.OrgIDPRov as Provider_Code 
	,o1.Organisation_Name AS Provider_Name
	,COALESCE(o2.Region_Code,'Missing/Invalid') AS Region_Code  --- regions taken from CCG rather than provider 
	,COALESCE(o2.Region_Name,'Missing/Invalid') AS Region_Name 
	,COALESCE(cc.New_Code,r.OrgIDCCGRes,'Missing/Invalid') AS CCGCode
	,COALESCE(o2.Organisation_Name,'Missing/Invalid') AS [CCG name]
	,COALESCE(o2.STP_Code,'Missing/Invalid') AS STPCode
	,COALESCE(o2.STP_Name,'Missing/Invalid') AS [STP name]
	,CASE 
		WHEN r.ClinRespPriorityType = '1' THEN 'Emergency' 
		WHEN r.ClinRespPriorityType = '2' THEN 'Urgent/Serious' 
		WHEN r.ClinRespPriorityType = '3' THEN 'Routine' 
	ELSE 'Missing/Invalid' END as ClinRespPriority 
	,CASE 
		WHEN r.SourceOfReferralMH = 'H1' THEN 'Emergency Department'
		WHEN r.SourceOfReferralMH = 'H2' THEN 'Acute Secondary Care' 
		WHEN r.SourceOfReferralMH IN ('A1','A2','A3','A4') THEN 'Primary Care' 
		WHEN r.SourceOfReferralMH IN ('B1','B2') THEN 'Self' 
		WHEN r.SourceOfReferralMH IN ('E1','E2','E3','E4','E5','E6') THEN 'Justice' 
		WHEN r.SourceOfReferralMH IN ('F1','F2','F3','G1','G2','G3','G4','I1','I2','M1','M2','M3','M4','M5','M6','M7','C1','C2','C3','D1','D2','N3') THEN 'Other'
		WHEN r.SourceOfReferralMH = 'P1' THEN 'Internal' 
		ELSE 'Missing/Invalid'
	END as RefSource
	,CASE 
		WHEN r.SourceOfReferralMH = 'H1' THEN 'Emergency Department'
		WHEN r.SourceOfReferralMH = 'H2' THEN 'Acute Secondary Care' 
		ELSE 'Other' 
	END as RefSourceSimplified
	,CASE 
		WHEN r.AgeServReferRecDate BETWEEN 0 AND 17 THEN '0-17' 
		WHEN r.AgeServReferRecDate >=18 THEN '18+' 
		ELSE 'Missing/Invalid' 
	END as AgeCat
	,ISNULL(o5.Main_Description,'Missing/Invalid') AS TeamType
	,CASE 
		WHEN r.ServTeamTypeRefToMH IN ('A02','A03','A04','A19','A18') THEN 'NHS Crisis Services' --- CRT, HTT, CR/HTT, 24/7 response line, SPA
		WHEN r.ServTeamTypeRefToMH IN ('A20','A21','A24','A25') THEN 'Other Crisis Servies' --- HBPoS, Crisis Cafes, Acute Day Service, Crisis Houses
		WHEN r.ServTeamTypeRefToMH IN ('A11','C05') THEN 'Liaison Psychiatry' --- Liaison Psych, Paed Liaison Psych
		WHEN r.ServTeamTypeRefToMH IN ('A22','A23') THEN 'Other Hospital-Based Crisis Services' -- Walk-in Crisis Assessment Unit, Psychiatric Decision Unit
	END as TeamTypeCat
	,r.PrimReasonReferralMH
	,CASE WHEN r.PrimReasonReferralMH = '15' THEN 1 ELSE 0 END as SelfHarm_PrimReason
	,ROW_NUMBER()OVER(PARTITION BY r.Person_ID, r.UniqServreqID ORDER BY r.UniqMonthID DESC) AS Ref_RN
	,ROW_NUMBER() OVER(PARTITION BY r.Person_ID, r.UniqServReqID, r.UniqMOnthID ORDER BY r.MHS102UniqID DESC) AS MHS102_RN ---- partition to get one MHS102 record per referral (for testing only)

INTO #Refs

FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Referral r 

LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Provider_Hierarchies o1 ON r.OrgIDProv = o1.Organisation_Code 
LEFT JOIN NHSE_Reference.dbo.tbl_Ref_Other_ComCodeChanges cc ON r.OrgIDCCGRes = cc.Org_Code
LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Commissioner_Hierarchies o2 ON COALESCE(cc.New_Code,r.OrgIDCCGRes) = o2.Organisation_Code

LEFT JOIN NHSE_UKHF.Data_Dictionary.vw_Service_Or_Team_Type_For_Mental_Health_SCD o5 ON r.ServTeamTypeRefToMH COLLATE DATABASE_DEFAULT = o5.Main_Code_Text COLLATE DATABASE_DEFAULT AND o5.Effective_To IS NULL AND o5.Valid_To IS NULL 

LEFT JOIN NHSE_Sandbox_MentalHealth.dbo.PreProc_Header h ON r.UniqMonthID = h.UniqMonthID 

WHERE  r.UniqMonthID BETWEEN @RP_START AND @RP_END --- get referrals for each Month ID to calculate active refs per month
AND r.ReferRejectionDate IS NULL --- only accpeted referrals 
AND r.ServTeamTypeRefToMH IN ('A02','A03','A04','A11','A18','A19','A20','A21','A22','A23','A24','A25','C05') --- relevant crisis teams
AND (r.LADistrictAuth LIKE 'E%' OR r.LADistrictAuth IS NULL)  --- English pts only 


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET FIRST F2F AND FIRST DIRECT CONTACT FOR NEW REFERRALS AND CALCULATE RESPONSE TIME 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#FirstCont') IS NOT NULL
DROP TABLE #FirstCont

SELECT
	r.UniqServReqID
	,r.UniqCareProfTeamID
	,r.Person_ID
	,r.Provider_Name
	,r.ReferralRequestReceivedDate
	,r.ReferralRequestReceivedTime
	,r.ReferralRequestReceivedDateTime
	,r.TeamType 
	,a1.Der_ActivityUniqID AS F2F_ActivityUniqID
	,a1.Der_ContactDate AS F2F_ContactDate
	,a1.Der_ContactTime AS F2F_ContactTime
	,CAST(ISNULL(a1.Der_ContactTime,'00:00:00') AS datetime) + CAST(a1.Der_ContactDate  AS datetime) AS F2F_ContactDateTime 
	,DATEDIFF(MINUTE, r.ReferralRequestReceivedDateTime, (CAST(ISNULL(a1.Der_ContactTime,'00:00:00') AS datetime) + CAST(a1.Der_ContactDate  AS datetime))) AS F2F_RespTime
	,a2.Der_ActivityUniqID AS Direct_ActivityUniqID
	,a2.Der_ContactDate AS Direct_ContactDate
	,a2.Der_ContactTime AS Direct_ContactTime
	,CAST(ISNULL(a2.Der_ContactTime,'00:00:00') AS datetime) + CAST(a2.Der_ContactDate  AS datetime) AS DirectF_ContactDateTime 
	,DATEDIFF(MINUTE, r.ReferralRequestReceivedDateTime, (CAST(ISNULL(a2.Der_ContactTime,'00:00:00') AS datetime) + CAST(a2.Der_ContactDate  AS datetime))) AS Direct_RespTime

INTO #FirstCont

FROM #Refs r 

LEFT JOIN NHSE_Sandbox_MentalHealth.dbo.PreProc_Activity a1 ON r.Person_ID = a1.Person_ID AND r.UniqServReqID = a1.UniqServReqID AND r.UniqCareProfTeamID = a1.Der_UniqCareProfTeamID --- join on team ID as well 
	AND a1.Der_FacetoFaceContactOrder = 1 ---- to get first F2F contact 

LEFT JOIN NHSE_Sandbox_MentalHealth.dbo.PreProc_Activity a2 ON r.Person_ID = a2.Person_ID AND r.UniqServReqID = a2.UniqServReqID AND r.UniqCareProfTeamID = a2.Der_UniqCareProfTeamID
	AND a2.Der_DirectContactOrder = 1 ---- to get first direct contact 

WHERE  r.Ref_RN = 1 AND r.MHS102_RN = 1  AND r.NewRef = 1





/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET ALL CONTACTS RECORDED AGAINST CRISIS AND LIAISON REFERRALS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#CrisisContacts') IS NOT NULL
DROP TABLE #CrisisContacts

SELECT 
	r.UniqServReqID
	,r.UniqCareProfTeamID
	,r.Person_ID
	,r.Provider_Code
	,r.Provider_Name
	,r.CCGCode
	,r.[CCG name]
	,r.STPCode
	,r.[STP name]
	,r.Region_Code
	,r.Region_Name
	,r.AgeCat
	,r.ReferralRequestReceivedDate
	,r.ReferralRequestReceivedTime
	,r.ReferralRequestReceivedDateTime
	,r.ReportingPeriodStartDate
	,r.ReportingPeriodEndDate
	,r.TeamType 
	,r.TeamTypeCat
	,r.RefSource
	,r.RefSourceSimplified
	,r.ClinRespPriority
	,c.Der_ActivityUniqID
	,c.Der_ActivityType
	,c.Der_ContactDate
	,DATEADD(MONTH, DATEDIFF(MONTH, 0, c.Der_ContactDate), 0) AS Cont_MonthYear
	,CASE WHEN c.Der_ContactDate >= @RP_ENDDATE_START THEN 'Primary' ELSE NULL END as PrimaryFlag
	,CASE WHEN c.Der_FacetoFaceContactOrder =1 THEN 1 ELSE 0 END as FirstContact 
	,c.AttendOrDNACode
	,CASE
		WHEN c.AttendOrDNACode IN ('5','6') THEN 'Attended' 
		WHEN c.AttendOrDNACode IN ('7','2','3','4') THEN 'DNA' 
		ELSE 'Missing/Invalid' 
	END as 'AttendanceCode'
	,CASE 
		WHEN c.ConsMediumUsed = '01' THEN 'F2F' 
		WHEN c.ConsMediumUsed = '02' THEN 'Telephone' 
		WHEN c.ConsMediumUsed = '03' THEN 'Telemedicine' 
		WHEN c.ConsMediumUsed = '04' THEN 'Talk Type for person unable to speak' 
		WHEN c.ConsMediumUsed = '05' THEN 'Email' 
		WHEN c.ConsMediumUsed = '06' THEN 'SMS' 
		WHEN c.ConsMediumUsed = '98' THEN 'Other' 
		ELSE 'Missing/Invalid' 
	END as 'ConsMediumCode' 

INTO #CrisisContacts

FROM #Refs r 

INNER JOIN NHSE_Sandbox_MentalHealth.dbo.PreProc_Activity c ON r.Person_ID = c.Person_ID  AND r.UniqServReqID = c.UniqServReqID AND r.UniqCareProfTeamID = c.Der_UniqCareProfTeamID 

WHERE r.Ref_RN = 1 AND r.MHS102_RN = 1  AND r.NewRef = 1
AND c.Der_ActivityType = 'DIRECT' --- direct contacts only 
AND c.Der_ContactDate >= @RP_STARTDATE



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET A&E ATTENDANCES FOR ACTIVE CRISIS REFERRALS  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Attendances') IS NOT NULL
DROP TABLE #Attendances

SELECT
	r.UniqServReqID
	,r.Person_ID
	,r.Der_Pseudo_NHS_Number 
	,r.Provider_Code 
	,r.UniqMonthID
	,r.ReportingPeriodStartDate
	,r.ReportingPeriodEndDate 
	,r.TeamType
	,r.AgeCat
	,r.ReferralRequestReceivedDateTime 
	,c.Direct_ContactDate
	,a.Generated_Record_ID
	,a.Der_Provider_Code
	,Arrival_Date
	,CAST(ISNULL(a.Arrival_Time,'00:00:00') AS datetime) + CAST(a.Arrival_Date AS datetime) AS ArrivalDateTime
	,ROW_NUMBER() OVER(PARTITION BY r.UniqServReqID, r.Der_Pseudo_NHS_Number, r.UniqMonthID ORDER BY a.Arrival_date, a.Arrival_Time) AS RN

INTO #Attendances

FROM #Refs r 

JOIN #FirstCont c ON r.UniqServReqID = c.UniqServReqID ANd r.Person_ID = c.Person_ID AND c.F2F_ActivityUniqID IS NOT NULL ---- only people who have had a F2F contact

JOIN [NHSE_SUSPlus_Live].[dbo].[tbl_Data_SUS_EC] a 
	ON r.Der_Pseudo_NHS_Number = a.Der_Pseudo_NHS_Number 
	AND a.Arrival_Date BETWEEN r.ReportingPeriodStartDate AND r.ReportingPeriodEndDate 
	AND a.Arrival_Date BETWEEN r.ReferralRequestReceivedDate AND ISNULL(r.ServDischDate,r.ReportingPeriodEndDate)
	AND (a.Arrival_Time > r.ReferralRequestReceivedTime OR r.ReferralRequestReceivedTime IS NULL) 

	AND a.EC_Department_Type = '01' --- Type 1 EDs only 
	AND a.Der_Dupe_Flag = 0  
	AND (EC_Chief_Complaint_SNOMED_CT IN ('248062006','272022009','48694002','248020004','7011001') --- MH related attendances
			OR EC_Injury_Intent_SNOMED_CT = '276853009' 
			OR COALESCE(LEFT(Der_EC_Diagnosis_All, NULLIF(CHARINDEX(',',Der_EC_Diagnosis_All),0)-1),Der_EC_Diagnosis_All) 
				IN ('52448006','2776000','33449004','72366004','197480006','13746004','58214004','69322001','397923000','30077003','44376007','17226007','50705009')
		)

WHERE  r.MHS102_RN = 1 --- remove duplicates
AND r.Ref_RN = 1 


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SUMMARISE ADMISSIONS AND ATTENDANCES FOR ACTIVE REFERRALS,
FLAG NEW REFERRALS AND ADD RESPONSE TIMES 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Master') IS NOT NULL
DROP TABLE #Master

SELECT 
	r.UniqServReqID 
	,r.Person_ID 
	,r.Der_Pseudo_NHS_Number
	,r.UniqMonthID
	,r.PrimaryFlag
	,r.ReportingPeriodStartDate
	,r.ReportingPeriodEndDate
	,r.ReferralRequestReceivedDate 
	,r.ReferralRequestReceivedTime 
	,r.ReferralRequestReceivedDateTime 
	,r.NewRef
	,r.Ref_MonthYear
	,r.Provider_Code 
	,r.Provider_Name
	,r.Region_Code 
	,r.Region_Name 
	,r.CCGCode
	,r.[CCG name]
	,r.STPCode
	,r.[STP name]
	,o.Region_Code AS Prov_Region_Code --- add in STP and region derived from provider (for regional summary) 
	,o.Region_Name AS Prov_Region_Name
	,o.STP_Code AS Prov_STP_Code
	,o.STP_Name AS Prov_STP_Name
	,r.ClinRespPriority
	,r.RefSource 
	,r.RefSourceSimplified
	,r.AgeCat
	,r.TeamType
	,r.TeamTypeCat
	,r.SelfHarm_PrimReason
	,f.Direct_ActivityUniqID
	,f.Direct_RespTime
	,f.F2F_ActivityUniqID
	,f.F2F_RespTime 
	--,ISNULL(ad.Admission,0) AS Month_Admission_all
	--,ISNULL(ad.CRT_Admission,0) AS Month_CRT_Admission
	--,ISNULL(ad.ED_Admission,0) AS Month_ED_Admission
	,ISNULL(ae.Attendance,0) AS Month_Attendance

INTO #Master

FROM #Refs r 

LEFT JOIN #FirstCont f ON r.UniqServReqID = f.UniqServReqID AND r.Person_ID = f.Person_ID 

LEFT JOIN 
	(SELECT UniqServReqID, Person_ID, UniqMonthID, 1 AS Attendance, COUNT(*) as Attendances --- added 1 to only count one attendance per referral per month 
	FROM #Attendances 
	GROUP BY UniqServReqID, Person_ID, UniqMonthID 
	) ae 
	ON r.UniqServReqID = ae.UniqServReqID AND r.Person_ID = ae.Person_ID AND r.UniqMonthID = ae.UniqMonthID 


LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Provider_Hierarchies o ON r.Provider_Code = o.Organisation_Code
		
WHERE  r.MHS102_RN = 1 --- remove duplicates
AND r.Ref_RN = 1 


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE FOR NEW REFERRALS (BASED ON REF START MONTH)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Agg_NewRefs') IS NOT NULL
DROP TABLE #Agg_NewRefs

SELECT 
	Ref_MonthYear AS ReportingPeriod 
	,PrimaryFlag
	,Provider_Code
	,Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,Prov_Region_Code
	,Prov_Region_Name
	,Prov_STP_Code
	,Prov_STP_Name
	,TeamTypeCat
	,TeamType
	,ClinRespPriority 
	,RefSourceSimplified --- used to reduce number of rows 
	,AgeCat
	,SUM(NewRef) AS NewRefs 
	,SUM(CASE WHEN Direct_ActivityUniqID IS NOT NULL THEN 1 ELSE 0 END) as Direct_Contact 
	,SUM(CASE WHEN F2F_ActivityUniqID IS NOT NULL THEN 1 ELSE 0 END) as F2F_Contact 
	,SUM(CASE WHEN F2F_ActivityUniqID IS NOT NULL AND F2F_RespTime <= 60 THEN 1 ELSE 0 END) F2F_1hr
	,SUM(CASE WHEN F2F_ActivityUniqID IS NOT NULL AND F2F_RespTime <= (60*4) THEN 1 ELSE 0 END) F2F_4hr
	,SUM(CASE WHEN F2F_ActivityUniqID IS NOT NULL AND F2F_RespTime <= (60*24) THEN 1 ELSE 0 END) F2F_24hr

INTO #Agg_NewRefs

FROM #Master

WHERE NewRef = 1 

GROUP BY Ref_MonthYear, PrimaryFlag, Provider_Code, Provider_Name, CCGCode, [CCG name], STPCode, [STP name], Region_Code, Region_Name, TeamTypeCat, TeamType, ClinRespPriority, RefSourceSimplified, AgeCat,
Prov_Region_Code, Prov_Region_Name, Prov_STP_Code, Prov_STP_Name



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE CARE CONTACT INFORMATION 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Agg_Contacts') IS NOT NULL
DROP TABLE #Agg_Contacts

SELECT 
	c.Cont_MonthYear AS ReportingPeriod 
	,c.PrimaryFlag
	,c.Provider_Code
	,c.Provider_Name
	,c.CCGCode
	,c.[CCG name]
	,c.STPCode
	,c.[STP name]
	,c.Region_Code
	,c.Region_Name
	,o.Region_Code AS Prov_Region_Code
	,o.Region_Name AS  Prov_Region_Name
	,o.STP_Code AS Prov_STP_Code
	,o.STP_Name AS Prov_STP_Name
	,TeamTypeCat
	,TeamType
	,ClinRespPriority 
	,RefSourceSimplified
	,AgeCat
	,COUNT(*) as TotalContacts 
	,COUNT(*) as Denom_contacts
	,SUM(CASE WHEN AttendanceCode = 'Attended' THEN 1 ELSE 0 END) as Contact_Attended
	,SUM(CASE WHEN AttendanceCode = 'DNA' THEN 1 ELSE 0 END) as Contact_DNA
	,SUM(CASE WHEN AttendanceCode = 'Missing/Invalid' THEN 1 ELSE 0 END) as Contact_nullDNA
	,SUM(CASE WHEN ConsMediumCode = 'F2F' THEN 1 ELSE 0 END) as Contact_F2F
	,SUM(CASE WHEN ConsMediumCode = 'Telephone' THEN 1 ELSE 0 END) as Contact_Telephone
	,SUM(CASE WHEN ConsMediumCode = 'Email' THEN 1 ELSE 0 END) as Contact_Email
	,SUM(CASE WHEN ConsMediumCode = 'Telemedicine' THEN 1 ELSE 0 END) as Contact_Telemedicine
	,SUM(CASE WHEN ConsMediumCode = 'Talk Type for person unable to speak' THEN 1 ELSE 0 END) as Contact_TalkType
	,SUM(CASE WHEN ConsMediumCode = 'SMS' THEN 1 ELSE 0 END) as Contact_SMS
	,SUM(CASE WHEN ConsMediumCode = 'Other' THEN 1 ELSE 0 END) as Contact_OtherMedium
	,SUM(CASE WHEN ConsMediumCode = 'Missing/Invalid' THEN 1 ELSE 0 END) as Contact_NullMedium

INTO #Agg_Contacts

FROM #CrisisContacts c

LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Provider_Hierarchies o ON c.Provider_Code = o.Organisation_Code
	
GROUP BY Cont_MonthYear, PrimaryFlag, Provider_Code, Provider_Name, CCGCode, [CCG name], STPCode, [STP name], c.Region_Code, c.Region_Name, TeamTypeCat, TeamType, ClinRespPriority, RefSourceSimplified, AgeCat,
o.Region_Code, o.Region_Name, o.STP_Code, o.STP_Name



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ADD CCG POPULATIONS (BASED ON  GP REGISTERED POPULATION)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Population') IS NOT NULL
DROP TABLE #Population


 SELECT 
	Commissioner_Code 
	,cc.Org_Code
	,cc.New_Code
	,Effective_Snapshot_Date
	,SUM(size) as [Population]
	,ROW_NUMBER()OVER(PARTITION BY Commissioner_Code ORDER BY Effective_Snapshot_Date DESC) AS RN 

INTO #Population

FROM [NHSE_UKHF].[Demography].[vw_No_Of_Patients_Regd_At_GP_Prac_Commissioner_Level1] a 

LEFT JOIN NHSE_Reference.dbo.tbl_Ref_Other_ComCodeChanges cc ON a.Commissioner_Code COLLATE DATABASE_DEFAULT = cc.Org_Code COLLATE DATABASE_DEFAULT
 
GROUP BY Commissioner_Code, Effective_Snapshot_Date, cc.Org_Code, cc.New_Code


 
/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ADD RELEVANT DENOMINATORS 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Denoms_NewRefs') IS NOT NULL
DROP TABLE #Denoms_NewRefs

SELECT 
	ReportingPeriod
	,PrimaryFlag
	,Provider_Code
	,Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,Prov_Region_Code
	,Prov_Region_Name
	,Prov_STP_Code
	,Prov_STP_Name
	,TeamTypeCat
	,TeamType
	,ClinRespPriority
	,RefSourceSimplified
	,AgeCat
	,NewRefs
	,F2F_Contact  
	,Direct_Contact
	,F2F_1hr
	,F2F_4hr
	,F2F_24hr
	-- denominators
	,NewRefs as Denom_contact
	,F2F_Contact as Denom_resp_times
	,CAST(p1.[MH Weighted population] as INT) as [MH Weighted population]
	,CAST(p2.[Population] AS INT) AS [Registered population]

INTO #Denoms_NewRefs

FROM #Agg_NewRefs a

LEFT JOIN NHSE_Sandbox_MentalHealth.[dbo].[Reference_MH_wt_population] p1 ON a.CCGCode = p1.[CCG code] 

LEFT JOIN 
	( 
	SELECT 
	ISNULL(NEw_Code, Commissioner_Code) AS CCG_Code
	,SUM([Population]) AS [Population]
	FROM #Population 
	 WHERE RN = 1 
	GROUP BY ISNULL(NEw_Code, Commissioner_Code)  
	) p2 ON a.CCGCode = p2.CCG_Code 




/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
UNPIVOT TO PRODUCE FINAL OUTPUT 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Output') IS NOT NULL
DROP TABLE #Output

SELECT 
	ReportingPeriod
	,PrimaryFlag
	,Provider_Code
	,Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,Prov_Region_Code
	,Prov_Region_Name
	,Prov_STP_Code
	,Prov_STP_Name
	,TeamTypeCat
	,TeamType
	,ClinRespPriority
	,RefSourceSimplified
	,AgeCat
	,MeasureName
	,MeasureValue
	,CASE
		WHEN MeasureName IN ('F2F_Contact', 'Direct_Contact') THEN Denom_contact 
		WHEN MeasureName IN ('F2F_RespTime','F2F_1hr','F2F_4hr','F2F_24hr') THEN Denom_resp_times
	END as Denominator 
	,[MH Weighted population]
	,[Registered population]

INTO #Output

FROM #Denoms_NewRefs 

UNPIVOT (MeasureValue FOR MeasureName IN 
		(NewRefs, F2F_Contact, Direct_Contact, F2F_1hr, F2F_4hr, F2F_24hr)) u 

UNION ALL 

SELECT 
	ReportingPeriod
	,PrimaryFlag
	,Provider_Code
	,Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,Prov_Region_Code
	,Prov_Region_Name
	,Prov_STP_Code
	,Prov_STP_Name
	,TeamTypeCat
	,TeamType
	,ClinRespPriority
	,RefSourceSimplified
	,AgeCat
	,MeasureName
	,MeasureValue
	,Denom_contacts 
	,NULL AS [MH Weighted population]
	,NULL AS [Registered population]

FROM #Agg_Contacts 

UNPIVOT (MeasureValue FOR MeasureName IN 
		(TotalContacts, Contact_Attended, Contact_DNA, Contact_nullDNA,
		Contact_F2F, Contact_Telephone, Contact_Email, Contact_Telemedicine, Contact_TalkType, Contact_SMS, Contact_OtherMedium, Contact_NullMedium)) u 
