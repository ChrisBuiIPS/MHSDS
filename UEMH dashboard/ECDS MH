/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
UECMH DASHBOARD 

ECDS ANALYSIS 

CREATED BY TOM BARDSLEY 11 NOVEMBER 2020
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

-- SET REPORTING PERIOD VARIABLES 

DECLARE @RP_START INT
DECLARE @RP_END INT
DECLARE @RP_STARTDATE DATE
DECLARE @RP_ENDDATE DATE

SET @RP_START = 1405 
SET @RP_END = (SELECT MAX(UniqMonthID) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header) 

SET @RP_STARTDATE = (SELECT MIN(ReportingPeriodStartDate) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header WHERE UniqMonthID = @RP_START) --- using same date ranges as in the MHSDS 
SET @RP_ENDDATE = (SELECT MAX(ReportingPeriodEndDate) FROM NHSE_Sandbox_MentalHealth.dbo.PreProc_Header WHERE UniqMonthID = @RP_END)


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET ALL ATTENDANCES FROM ECDS IN TYPE 1 EDs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#ECDS') IS NOT NULL
DROP TABLE #ECDS

SELECT 
	a.Generated_Record_ID
	,a.Der_Provider_Code 
	,COALESCE(o1.Organisation_Name,'Missing/Invalid') AS Der_Provider_Name
	,a.Der_Provider_Site_Code 
	,COALESCE(o2.Organisation_Name,'Missing/Invalid') AS Der_Provider_Site_Name
	,COALESCE(o3.Region_Code,'Missing/Invalid') AS Region_Code --- regions taken from CCG of provider rather than CCG of residence
	,COALESCE(o3.Region_Name,'Missing/Invalid') AS Region_Name
	,COALESCE(cc.New_Code,a.Attendance_HES_CCG_From_Treatment_Site_Code,'Missing/Invalid') AS CCGCode
	,COALESCE(o3.Organisation_Name,'Missing/Invalid') AS [CCG name]
	,COALESCE(o3.STP_Code,'Missing/Invalid') AS STPCode
	,COALESCE(o3.STP_Name,'Missing/Invalid') AS [STP name]
	,DATEADD(MONTH, DATEDIFF(MONTH, 0, Arrival_Date), 0) MonthYear
	,a.Arrival_Date 
	,DATEPART(HOUR, a.Arrival_Time) as Arrival_Hour 
	,CASE WHEN a.Arrival_Time >= '18:30:00' OR a.Arrival_Time < '08:00:00' THEN 1 ELSE 0 END as OutofHours -- added out of hours flag (the same for weekdays, weekends or bank holidays)
	,DATEPART(WEEKDAY, a.Arrival_Date) AS Arrival_DW
	,CAST(ISNULL(a.Arrival_Time,'00:00:00') AS datetime) + CAST(a.Arrival_Date AS datetime) AS ArrivalDateTime
	,a.EC_Departure_Date 
	,a.EC_Departure_Time
	,CAST(ISNULL(a.EC_Departure_Time,'00:00:00') AS datetime) + CAST(a.EC_Departure_Date AS datetime) AS DepartureDateTime
	,a.EC_Departure_Time_Since_Arrival
	,a.EC_Initial_Assessment_Time_Since_Arrival
	,a.EC_Chief_Complaint_SNOMED_CT
	,c.ChiefComplaintDescription
	,a.EC_Injury_Intent_SNOMED_CT
	,i.InjuryIntentDescription
	,a.Der_EC_Diagnosis_All
	,COALESCE(LEFT(a.Der_EC_Diagnosis_All, NULLIF(CHARINDEX(',',a.Der_EC_Diagnosis_All),0)-1),a.Der_EC_Diagnosis_All) AS PrimaryDiagnosis
	,d.DiagnosisDescription
	,a.Age_At_Arrival 
	,CASE 
		WHEN a.Age_At_Arrival BETWEEN 0 AND 11 THEN '0-11'  
		WHEN a.Age_At_Arrival BETWEEN 12 AND 17 THEN '12-17'
		WHEN a.Age_At_Arrival BETWEEN 18 AND 25 THEN '18-25'
		WHEN a.Age_At_Arrival BETWEEN 26 AND 64 THEN '26-64' 
		WHEN a.Age_At_Arrival >= 65 THEN '65+' 
		ELSE 'Missing/Invalid' 
	END as AgeCat 
	,CASE WHEN ChiefComplaintDescription IS NOT NULL THEN 1 ELSE 0 END as Val_ChiefComplaint --- NOTE: check these are aligned with other ECDS DQ reporting !!
	,CASE WHEN a.EC_Injury_Date IS NOT NULL THEN 1 ELSE 0 END as InjuryFlag
	,CASE WHEN a.EC_Injury_Date IS NOT NULL AND InjuryIntentDescription IS NOT NULL THEN 1 ELSE 0 END as Val_InjuryIntent
	,CASE WHEN DiagnosisDescription IS NOT NULL THEN 1 ELSE 0 END as Val_Diagnosis
	,CASE 
			WHEN EC_Chief_Complaint_SNOMED_CT IN ('248062006' --- self harm
				,'272022009' --- depressive feelings 
				,'48694002' --- feeling anxious 
				,'248020004' --- behaviour: unsual 
				,'7011001') THEN 1  --- hallucinations/delusions 
			WHEN EC_Injury_Intent_SNOMED_CT = '276853009' THEN 1 --- self inflicted injury 
			WHEN COALESCE(LEFT(Der_EC_Diagnosis_All, NULLIF(CHARINDEX(',',Der_EC_Diagnosis_All),0)-1),Der_EC_Diagnosis_All) 
				IN ('52448006' --- dementia
				,'2776000' --- delirium 
				,'33449004' --- personality disorder
				,'72366004' --- eating disorder
				,'197480006' --- anxiety disorder
				,'35489007' --- depressive disorder
				,'13746004' --- bipolar affective disorder
				,'58214004' --- schizophrenia
				,'69322001' --- psychotic disorder
				,'397923000' --- somatisation disorder
				,'30077003' --- somatoform pain disorder
				,'44376007' --- dissociative disorder
				,'17226007' ---- adjustment disorder
				,'50705009') THEN 1 ---- factitious disorder
		ELSE 0 
		END as MH_Flag 
	,CASE 
		WHEN EC_Injury_Intent_SNOMED_CT = '276853009' THEN 1
		WHEN EC_Chief_Complaint_SNOMED_CT = '248062006' THEN 1
		ELSE 0 
	END as SelfHarm_Flag 
	
INTO #ECDS

FROM [NHSE_SUSPlus_Live].[dbo].[tbl_Data_SUS_EC] a

LEFT JOIN [NHSE_Reference].[dbo].[tbl_Ref_DataDic_ECDS_Chief_Complaint] c ON c.ChiefComplaintCode = a.EC_Chief_Complaint_SNOMED_CT

LEFT JOIN [NHSE_Reference].[dbo].[tbl_Ref_DataDic_ECDS_Injury_Intent] i ON i.InjuryIntentCode = a.EC_Injury_Intent_SNOMED_CT

LEFT JOIN [NHSE_Reference].[dbo].[tbl_Ref_DataDic_ECDS_Diagnosis] d ON COALESCE(LEFT(a.Der_EC_Diagnosis_All, NULLIF(CHARINDEX(',',a.Der_EC_Diagnosis_All),0)-1),a.Der_EC_Diagnosis_All) = d.DiagnosisCode 

LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Provider_Hierarchies o1 ON a.Der_Provider_Code = o1.Organisation_Code --- providers 
LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Provider_Hierarchies o2 ON a.Der_Provider_Site_Code = o2.Organisation_Code --- sites
LEFT JOIN NHSE_Reference.dbo.tbl_Ref_Other_ComCodeChanges cc ON a.Attendance_HES_CCG_From_Treatment_Site_Code = cc.Org_Code 
LEFT JOIN NHSE_Reference.dbo.tbl_Ref_ODS_Commissioner_Hierarchies o3 ON COALESCE(cc.New_Code,a.Attendance_HES_CCG_From_Treatment_Site_Code) = o3.Organisation_Code --- CCG / STP / Region 

WHERE Der_Dupe_Flag = 0 --- remove duplicates (check this actually works)  
AND a.EC_Department_Type = '01' --- Type 1 EDs only 
AND a.Arrival_Date >= @RP_STARTDATE





/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
CLEAN PROVIDER SITE NAMES 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Sites') IS NOT NULL
DROP TABLE #Sites

SELECT
	Generated_Record_ID
	,Der_Provider_Code 
	,Der_Provider_Name
	,Der_Provider_Site_Code 
	,CASE 
		WHEN Der_Provider_Site_Name = 'Missing/Invalid' THEN 'Missing/Invalid' 
		ELSE Der_Provider_Site_Code
	END as Der_Provider_Site_Code_cleaned
	,Der_Provider_Site_Name
	,CASE 
		WHEN Der_Provider_Site_Name = 'Missing/Invalid' THEN CONCAT(Der_Provider_Name,':',' ','missing site name') 
		ELSE Der_Provider_Site_Name 
	END as Der_Provider_Site_Name_cleaned
	,Region_Code --- regions taken from CCG rather than provider 
	,Region_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,MonthYear
	,Arrival_Date 
	,ArrivalDateTime
	,Arrival_Hour
	,OutofHours
	,Arrival_DW
	,EC_Departure_Date 
	,EC_Departure_Time
	,DepartureDateTime
	,EC_Departure_Time_Since_Arrival
	,EC_Initial_Assessment_Time_Since_Arrival
	,EC_Chief_Complaint_SNOMED_CT
	,ChiefComplaintDescription
	,EC_Injury_Intent_SNOMED_CT
	,InjuryIntentDescription
	,Der_EC_Diagnosis_All
	,PrimaryDiagnosis
	,DiagnosisDescription
	,Age_At_Arrival 
	,AgeCat 
	,Val_ChiefComplaint
	,InjuryFlag
	,Val_InjuryIntent
	,Val_Diagnosis
	,MH_Flag 
	,SelfHarm_Flag 

INTO #Sites 

FROM #ECDS



 /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE TO GET ACCESS AND WAITING TIME METRICS
NB: EXCLUDE THOSE OVER 24HRS FROM WAITING TIMES
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Agg') IS NOT NULL
DROP TABLE #Agg

SELECT 
	MonthYear
	,Der_Provider_Site_Code_cleaned
	,Der_Provider_Site_Name_cleaned
	,Der_Provider_Code
	,Der_Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,AgeCat
	,OutOfHours
	,COUNT(*) as ED_Attendances
	,SUM(Val_ChiefComplaint) as Val_ChiefComplaint
	,SUM(Val_Diagnosis) as Val_Diagnosis
	,SUM(InjuryFlag) as InjuryFlag
	,SUM(Val_InjuryIntent) as Val_InjuryIntent
	,SUM(MH_Flag) as MH_attendances
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) THEN MH_Flag ELSE 0 END) as MH_attendances_trimmed
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) THEN 1 ELSE 0 END) as All_attendances_trimmed
	,SUM(SelfHarm_Flag) as SelfHarm_Attendances
	,SUM(CASE WHEN MH_Flag = 1 AND EC_Departure_Time_Since_Arrival < (24*60) THEN EC_Departure_Time_Since_Arrival ELSE 0 END) as MH_TotalTimeInED
	,SUM(CASE WHEN MH_Flag = 1 AND EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*6) THEN 1 ELSE 0 END) as MH_Breach6hrs 
	,SUM(CASE WHEN MH_Flag = 1 AND EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*6) THEN EC_Departure_Time_Since_Arrival - (60*6) ELSE 0 END) AS MH_APD_6hrs
	,SUM(CASE WHEN MH_Flag = 1 AND EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*12) THEN 1 ELSE 0 END) as MH_Breach12hrs 
	,SUM(CASE WHEN MH_Flag = 1 AND EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*12) THEN EC_Departure_Time_Since_Arrival - (60*12) ELSE 0 END) AS MH_APD_12hrs
	
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) THEN EC_Departure_Time_Since_Arrival ELSE 0 END) as All_TotalTimeInED 
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*6) THEN 1 ELSE 0 END) as All_Breach6hrs 
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*6) THEN EC_Departure_Time_Since_Arrival - (60*6) ELSE 0 END) AS All_APD_6hrs
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*12) THEN 1 ELSE 0 END) as All_Breach12hrs 
	,SUM(CASE WHEN EC_Departure_Time_Since_Arrival < (24*60) AND EC_Departure_Time_Since_Arrival > (60*12) THEN EC_Departure_Time_Since_Arrival - (60*12) ELSE 0 END) AS All_APD_12hrs
	
	,SUM(CASE WHEN  MH_Flag = 1 AND EC_Departure_Time_Since_Arrival >= (24*60) THEN 1 ELSE 0 END) as MH_24hrs_breach
	,SUM(CASE WHEN  EC_Departure_Time_Since_Arrival >= (24*60) THEN 1 ELSE 0 END) as All_24hrs_breach

INTO #Agg 

FROM #Sites 

WHERE Region_Name <> 'WALES REGION' 

GROUP BY MonthYear, Der_Provider_Site_Code_cleaned, Der_Provider_Site_Name_cleaned, Der_Provider_Code, Der_Provider_Name, CCGCode, [CCG name], STPCode, [STP name], Region_Code, Region_Name, AgeCat, OutOfHours

 

/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ADD RELEVANT DENOMINATORS 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Denoms') IS NOT NULL
DROP TABLE #Denoms

SELECT 
	MonthYear
	,Der_Provider_Site_Code_cleaned
	,Der_Provider_Site_Name_cleaned
	,Der_Provider_Code
	,Der_Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,AgeCat
	,OutOfHours
	,ED_Attendances
	,All_attendances_trimmed --- to be used as denom for ALL mean time, % over 6hrs, % over 12hrs
	,Val_ChiefComplaint
	,Val_Diagnosis
	,Val_InjuryIntent
	,MH_attendances
	,MH_attendances_trimmed --- to be used as denom for mean time, % over 6hrs, % over 12 hrs
	,SelfHarm_Attendances
	,CAST(MH_TotalTimeInED as INT) AS MH_TotalTimeInED
	,MH_Breach6hrs
	,MH_Breach12hrs
	,MH_24hrs_breach
	,All_Breach6hrs
	,All_Breach12hrs
	,All_24hrs_breach
	,CAST(MH_APD_6hrs as INT) as MH_APD_6hrs
	,CAST(MH_APD_12hrs as INT) as MH_APD_12hrs
	,CAST(All_APD_6hrs as INT) as All_APD_6hrs
	,CAST(All_APD_12hrs as INT) as All_APD_12hrs
	,ED_Attendances AS Denom_all_attendances --- for % of MH attendances, % of self harm, % chief complaint, % diagnosis
	,InjuryFlag AS Denom_InjuryFlag ---- for % injury intent
	,MH_Breach6hrs AS Denom_MH_Breach6hrs --- for MH 6hr APD
	,MH_Breach12hrs AS Denom_MH_Breach12hrs --- for MH 12hr APD
	,All_Breach6hrs AS Denom_All_Breach6hrs --- for all 6hr APD 
	,All_Breach12hrs AS Denom_All_Breach12hrs --- for all 12hr APD
	,p1.[MH Weighted population] 
	,p2.[Population] AS [Registered population]

INTO #Denoms

FROM #Agg a


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
UNPIVOT FOR FINAL OUTPUT 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('tempdb..#Output') IS NOT NULL
DROP TABLE #Output
 
SELECT 
	MonthYear
	,Der_Provider_Site_Code_cleaned
	,Der_Provider_Site_Name_cleaned
	,Der_Provider_Code
	,Der_Provider_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,Region_Code
	,Region_Name
	,AgeCat
	,OutOfHours
	,MeasureName 
	,MeasureValue 
	,CASE 
		WHEN MeasureName IN ('MH_attendances','SelfHarm_Attendances','Val_ChiefComplaint','Val_Diagnosis') THEN Denom_all_attendances 
		WHEN MeasureName = 'Val_InjuryIntent' THEN Denom_InjuryFlag
		WHEN MeasureName IN ('MH_TotalTimeinED','MH_Breach6hrs','MH_Breach12hrs','MH_24hrs_breach') THEN MH_attendances_trimmed 
		WHEN MeasureName = 'MH_APD_6hrs' THEN Denom_MH_Breach6hrs
		WHEN MeasureName = 'MH_APD_12hrs' THEN Denom_MH_Breach12hrs
	END as Denominator 
	,CASE 
		WHEN MeasureName = 'MH_Breach6hrs' THEN All_Breach6hrs 
		WHEN MeasureName = 'MH_Breach12hrs' THEN All_Breach12hrs 
		WHEN MeasureName = 'MH_24hrs_breach' THEN All_24hrs_breach 
		WHEN MeasureName = 'MH_APD_6hrs' THEN All_APD_6hrs 
		WHEN MeasureName = 'MH_APD_12hrs' THEN All_APD_12hrs 
	END AS MeasureValue_alt
	,CASE 
		WHEN MeasureName = 'MH_Breach6hrs' THEN All_attendances_trimmed 
		WHEN MeasureName = 'MH_Breach12hrs' THEN All_attendances_trimmed 
		WHEN MeasureName = 'MH_24hrs_breach' THEN Denom_all_attendances 
		WHEN MeasureName = 'MH_APD_6hrs' THEN Denom_All_Breach6hrs 
		WHEN MeasureName = 'MH_APD_12hrs' THEN Denom_All_Breach12hrs 
	END AS Denominator_alt

INTO #Output

FROM #Denoms 

UNPIVOT (MeasureValue FOR MeasureName IN 
		(ED_Attendances, MH_attendances, SelfHarm_Attendances, Val_ChiefComplaint, Val_Diagnosis, 
		Val_InjuryIntent,
		MH_TotalTimeinED, 
		MH_Breach6hrs, MH_Breach12hrs, MH_24hrs_breach,
		MH_APD_6hrs,
		MH_APD_12hrs)) u 

