/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
STEP THREE - ACTIVITY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

DECLARE @EndRP INT

SET @EndRP = (SELECT UniqMonthID
FROM MHDInternal.[PreProc_Header]
WHERE Der_MostRecentFlag = 'P')


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - DROP EXISTING INDEXES
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

 --LOG START

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Drop Index Start' AS Step,
	GETDATE() AS [TimeStamp]

-- START CODE - DROP INDEXES

DROP INDEX ix_Activity ON MHDInternal.PreProc_Activity

-- LOG END

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Drop Index End' AS Step,
	GETDATE() AS [TimeStamp]

WAITFOR DELAY '00:00:01'



/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - DELETE DATA THAT HAS BEEN SUPERCEDED BY OTHER DATA
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

 --LOG START

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Delete Data Start' AS Step,
	GETDATE() AS [TimeStamp]

-- START CODE - DELETE DATA

DELETE FROM MHDInternal.PreProc_Activity WHERE NHSEUniqSubmissionID IN (SELECT NHSEUniqSubmissionID FROM MESH_MHSDS.MHSDS_SubmissionFlags WHERE Der_IsLatest = 'N')

-- LOG END

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Delete Data End' AS Step,
	GETDATE() AS [TimeStamp]

WAITFOR DELAY '00:00:01'



/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - DE-DUPLICATE MHS204							
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

IF OBJECT_ID ('[MHDInternal].Temp_PreProc_Indirect') IS NOT NULL
DROP TABLE [MHDInternal].Temp_PreProc_Indirect

SELECT
	i.[UniqSubmissionID],
	i.[NHSEUniqSubmissionID],
	i.[UniqMonthID],
	i.[OrgIDProv],
	i.[Der_Person_ID],
	i.[RecordNumber],
	i.[UniqServReqID],
	i.[OrgIDComm],
	i.CareProfLocalId AS [CareProfTeamLocalId], -- changed for v6
	i.[IndirectActDate],
	i.[IndirectActTime],
	i.[DurationIndirectAct],
	i.[MHS204UniqID],
	ROW_NUMBER () OVER(PARTITION BY i.UniqServReqID, i.IndirectActDate, i.IndirectActTime ORDER BY i.MHS204UniqID DESC) AS Der_ActRN

INTO MHDInternal.Temp_PreProc_Indirect

FROM [MESH_MHSDS].[MHS204IndirectActivity_ALL] i

INNER JOIN MHDInternal.Temp_PreProc_NewSubmissions f ON i.NHSEUniqSubmissionID = f.NHSEUniqSubmissionID --- only latest data


/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - INSERT DATA FROM MHS201 AND MHS204							
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

-- LOG START

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Insert Start' AS Step,
	GETDATE() AS [TimeStamp]


----INSERT 201 RECORDS
INSERT INTO [MHDInternal].[PreProc_Activity]

SELECT	
	-- header
	h.[ReportingPeriodStartDate],
	h.[ReportingPeriodEndDate],
	h.[Der_FY],
	-- core bits
	c.[UniqSubmissionID],
	c.[NHSEUniqSubmissionID],
	c.[UniqMonthID],
	c.[OrgIDProv],
	c.[Der_Person_ID] AS Person_ID,
	c.[RecordNumber],
	c.[UniqServReqID],
	-- contacts
	c.[UniqCareContID],
	c.[OrgIDComm],
	c.[AdminCatCode],
	c.[SpecialisedMHServiceCode],
	c.[ConsType],
	c.[CareContSubj],
	c.[ConsMechanismMH] AS [ConsMediumUsed],
	c.[ActLocTypeCode],
	c.[PlaceOfSafetyInd],
	c.[SiteIDOfTreat],
	c.[ComPeriMHPartAssessOfferInd],
	c.[PlannedCareContIndicator], 
	c.[CareContPatientTherMode], 
	c.AttendStatus AS [AttendOrDNACode], -- changed for v6 
	c.[EarliestReasonOfferDate],
	c.[EarliestClinAppDate],
	c.[CareContCancelDate],
	c.[CareContCancelReas],
	c.[ReasonableAdjustmentMade], 
	c.[AgeCareContDate],
	c.[ContLocDistanceHome],
	c.[TimeReferAndCareContact],
	--c.[LanguageCodeTreat], --- new for v6 
	--c.[InterpreterPresentInd], -- new for v6 
	-- derivations
	c.[UniqCareProfTeamID] AS [Der_UniqCareProfTeamID],
	c.[CareContDate] AS [Der_ContactDate],
	c.[CareContTime] AS [Der_ContactTime],
	c.[ClinContDurOfCareCont] AS [Der_ContactDuration],
	'DIRECT' AS [Der_ActivityType],
	c.[MHS201UniqID] AS [Der_ActivityUniqID],

	----Der_Contact - UPDATED LOGIC FOR MIGRATION - ACCOUNTS FOR PRE-V5 CONSULTATION MECHANISM CODES IN HISTORIC DATA
	CASE
		--Pre-V5 codes 
		WHEN c.UniqMonthID < 1459 --PRE-VERSION 5 DATA (UP TO END OF 1458)
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6') AND 
		(
			c.[ConsMechanismMH] IN ('01', '02', '04', '03') --Pre-V5 codes: F2F, telephone; talk type; Telemedicine
			OR c.OrgIDProv = 'DFC' AND c.[ConsMechanismMH] IN ('05','06') --Pre-V5 codes: Email, SMS
			) 
		THEN 1 
	
		--post V5 codes
		WHEN c.UniqMonthID >= 1459 --VERSION 5 DATA
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6') AND 
		(
			c.[ConsMechanismMH] IN ('01', '02', '04', '11') --V5 codes - attended contact; F2F, telephone; talk type; Video 
			OR c.OrgIDProv = 'DFC' AND c.[ConsMechanismMH] IN ('05','09', '10', '13') --Post-V5 codes: Email, SMS, IM, chatroom
			) 
		THEN 1 

	ELSE NULL END AS Der_Contact,

	----Der_DirectContact - UPDATED LOGIC FOR MIGRATION - ACCOUNTS FOR PRE-V5 CONSULTATION MECHANISM CODES IN HISTORIC DATA
	CASE 
		--Pre-V5 codes
		WHEN c.UniqMonthID < 1459 --PRE-VERSION 5 DATA(UP TO END OF 1458)
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6') 
		AND c.[ConsMechanismMH] IN ('01', '02', '04', '03')  --Pre-V5 codes: F2F, telephone; talk type; Telemedicine
		THEN 1 
	
		--post V5 codes
		WHEN c.UniqMonthID >= 1459 --VERSION 5 DATA
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6') 
		AND c.[ConsMechanismMH] IN ('01', '02', '04', '11')  --attended contact; F2F, telephone; talk type; Video
		THEN 1 
	
		ELSE NULL END AS [Der_DirectContact],

	CASE 
		--Pre-V5 codes
		WHEN c.UniqMonthID < 1459 --PRE-VERSION 5 DATA (UP TO END OF 1458)
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6')  
		AND c.[ConsMechanismMH] IN ('01','03') --F2F; Telemedicine
		THEN 1 

		--post V5 codes 
		WHEN c.UniqMonthID >= 1459 --VERSION 5 DATA
		AND COALESCE(c.AttendStatus, c.AttendOrDNACode) IN ('5','6') 
		AND c.[ConsMechanismMH]  IN ('01', '11') --F2F, Video
		THEN 1

	ELSE NULL END AS [Der_FacetoFaceContact],

	c.[LanguageCodeTreat], --- new for v6 
	c.[InterpreterPresentInd] -- new for v6 

FROM [MESH_MHSDS].[MHS201CareContact_ALL] c

LEFT JOIN [MHDInternal].[PreProc_Header] h ON h.UniqMonthID = c.UniqMonthID

INNER JOIN MHDInternal.Temp_PreProc_NewSubmissions f ON c.NHSEUniqSubmissionID = f.NHSEUniqSubmissionID --- only latest data


----INSERT DE-DUPLICATED 204 RECORDS
INSERT INTO [MHDInternal].[PreProc_Activity]

SELECT
	-- header
	h.[ReportingPeriodStartDate],
	h.[ReportingPeriodEndDate],
	h.[Der_FY],
	-- core bits
	i.[UniqSubmissionID],
	i.[NHSEUniqSubmissionID],
	i.[UniqMonthID],
	i.[OrgIDProv],
	i.[Der_Person_ID] AS Person_ID,
	i.[RecordNumber],
	i.[UniqServReqID],
	-- indirect activity
	NULL AS [UniqCareContID],
	i.[OrgIDComm],
	NULL AS [AdminCatCode],
	NULL AS [SpecialisedMHServiceCode],
	NULL AS [ConsType],
	NULL AS [CareContSubj],
	NULL AS [ConsMediumUsed],
	NULL AS [ActLocTypeCode],
	NULL AS [PlaceOfSafetyInd],
	NULL AS [SiteIDOfTreat],
	NULL AS [ComPeriMHPartAssessOfferInd],
	NULL AS [PlannedCareContIndicator],
	NULL AS [CareContPatientTherMode],
	NULL AS [AttendOrDNACode],
	NULL AS [EarliestReasonOfferDate],
	NULL AS [EarliestClinAppDate],
	NULL AS [CareContCancelDate],
	NULL AS [CareContCancelReas],
	NULL AS [ReasonableAdjustmentMade],
	NULL AS [AgeCareContDate],
	NULL AS [ContLocDistanceHome],
	NULL AS [TimeReferAndCareContact],
	-- derivations
	i.[OrgIDProv] + i.[CareProfTeamLocalId] AS [Der_UniqCareProfTeamID],
	i.[IndirectActDate] AS [Der_ContactDate],
	i.[IndirectActTime] AS [Der_ContactTime],
	i.[DurationIndirectAct] AS [Der_ContactDuration],
	'INDIRECT' AS [Der_ActivityType],
	i.[MHS204UniqID] AS [Der_ActivityUniqID],
	1 AS [Der_Contact],
	NULL AS [Der_DirectContact],
	NULL AS [Der_FacetoFaceContact],

	NULL AS [LanguageCodeTreat], --- new for v6 
	NULL AS [InterpreterPresentInd] -- new for v6 

FROM MHDInternal.Temp_PreProc_Indirect i

LEFT JOIN [MHDInternal].[PreProc_Header] h ON i.UniqMonthID = h.UniqMonthID

WHERE i.Der_ActRN = 1 


-- LOG END

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Insert End' AS Step,
	GETDATE() AS [TimeStamp]

WAITFOR DELAY '00:00:01'


/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - RECREATE INDEXES

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

-- LOG START

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Create Index Start' AS Step,
	GETDATE() AS [TimeStamp]


-- RECREATE INDEXES

CREATE INDEX ix_Activity ON [MHDInternal].[PreProc_Activity] ([UniqMonthID], [RecordNumber], [OrgIDProv], [Person_ID], [UniqServReqID])


-- LOG END

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Create Index End' AS Step,
	GETDATE() AS [TimeStamp]


/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACTIVITY - DROP TABLES
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 

-- LOG START

INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Drop Tables Start' AS Step,
	GETDATE() AS [TimeStamp]

---- DROP TABLES

DROP TABLE MHDInternal.Temp_PreProc_Indirect 


INSERT INTO MHDInternal.[PreProc_QueryStatus]

SELECT
	@EndRP AS [Month],
	'Activity Drop Tables End' AS Step,
	GETDATE() AS [TimeStamp]


END
